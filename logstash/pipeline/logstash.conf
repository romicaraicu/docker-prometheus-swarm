input {
        udp {
                port => 6611
                type => "nginx_error"
        }
        udp {
                port => 6645
                type => "nginx_access"
        }
        tcp {
              port => 5000
        }
}

## Add your filters / logstash plugins configuration here
filter {

    if [type] == "nginx_access" {

        grok {
            match => [
                "message",
            '%{SYSLOGTIMESTAMP:timestamp} %{NOTSPACE:node_name} %{HTTPDUSER:ident}: %{HOSTNAME:hostname} %{USER:remote_user} %{IPORHOST:clientip} \[%{HTTPDATE:nginx_timestamp}\] \"(?:%{WORD:method} %{NOTSPACE:request}(?: HTTP/%{NUMBER:http_version})?|%{DATA:raw_http_request})\" %{NUMBER:status} (?:%{NUMBER:bytes}|-) %{QS:referer} %{QS:useragent} %{NUMBER:time_duration:float} %{NOTSPACE:customerid} \"%{NOTSPACE:frontend}\"'
            ]
            add_tag => [ "nginx_access" ]
            remove_tag => [ "_grokparsefailure" ]
            remove_field => [ "message" ]
        }
			mutate {
              replace => [ "@message", "%{clientip} - %{remote_user} [%{nginx_timestamp}] %{request} %{status} %{bytes} %{referer} %{useragent}" ]
        }

      }

    if [type] == "nginx_error" {

        grok {
            match => [
                "message",
            '%{SYSLOGTIMESTAMP:timestamp} %{NOTSPACE:node_name} %{HTTPDUSER:ident}: %{DATA:nginx_timestamp} \[error\] %{GREEDYDATA:error}'
            ]
            add_tag => [ "nginx_error" ]
            remove_field => [ "message" ]
        }
      }
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
#		sniffing => true
#		manage_template => false
#		index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
#		document_type => "%{[@metadata][type]}"
	}
}
